y = table2array(class);
X = table2array(features);
%%

%80 : %20
rand_num = randperm(100);
X_train = X(rand_num(1:80),:);
y_train = y(rand_num(1:80),:);

X_test = X(rand_num(81:end),:);
y_test = y(rand_num(81:end),:);

%% CV partition
 c = cvpartition(y_train,'k',5);

%%feature selection
% opts = statset('display','iter');
% fun = @(train_data,train_labels,test_data, test_labels)...
%     sum(predict(fitcsvm(train_data,train_labels,'KernelFunciton','rbf'),test_data ~=test_labels);
% 
% [fs,history] = sequentialfs(fun, X_train, y_train,'cv'.c, 'options'.opts,'nfeatures',2);

opts = statset('display','iter');
classf = @(train_data, train_labels, test_data, test_labels)...
    sum(predict(fitcsvm(train_data, train_labels,'KernelFunction','rbf'), test_data) ~= test_labels);

[fs, history] = sequentialfs(classf, X_train, y_train, 'cv', c, 'options', opts,'nfeatures',2);
%%
X_train_w_best_feature = X_train(:,fs);

Md1 = fitcsvm(X_train_w_best_feature,y_train,'KernelFunction','rbf','OptimizeHyperparameters','auto',...
      'HyperparameterOptimizationOptions',struct('AcquisitionFunctionName',...
      'expected-improvement-plus','ShowPlots',true));
  
%%  
